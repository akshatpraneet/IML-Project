{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Not so simple CNN.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "ya5IvL4n5NTF"
      },
      "source": [
        "# Importing relevant libraries\n",
        "\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "from tensorflow.keras import Sequential\n",
        "from tensorflow.keras import layers, activations, callbacks\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.model_selection import train_test_split\n",
        "from tensorflow.keras.datasets import cifar10\n",
        "from keras.preprocessing.image import ImageDataGenerator"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "e3jWK_OK7Mnr"
      },
      "source": [
        "# Loading the CIFAR-10 dataset\n",
        "(X_train, y_train),( X_test,y_test) = cifar10.load_data()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HhtD_XOX6TZp"
      },
      "source": [
        "# Data pre-processing\n",
        "X_train, X_test = X_train/255 , X_test / 255\n",
        "\n",
        "# Data augmentation\n",
        "augment = ImageDataGenerator(rotation_range = 15, horizontal_flip = True, height_shift_range=0.1, width_shift_range=0.1, zoom_range=0.3)\n",
        "augment.fit(X_train)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_69opQNBkYsv",
        "outputId": "f166dfda-6b39-42d2-bec1-6f50fc813794"
      },
      "source": [
        "# Setting up the Not-so-simple CNN model\n",
        "\n",
        "model = Sequential()\n",
        "\n",
        "model.add(layers.Conv2D(32, (3,3), strides = (1,1), padding='same', input_shape= X_train[0].shape, activation='relu'))\n",
        "model.add(layers.BatchNormalization())\n",
        "model.add(layers.Conv2D(64, (3,3), strides = (1,1), padding='same', activation='relu' ))\n",
        "model.add(layers.BatchNormalization())\n",
        "model.add(layers.MaxPooling2D(pool_size=(4, 4)))\n",
        "model.add(layers.Dropout(0.5))\n",
        "\n",
        "model.add(layers.Flatten())\n",
        "\n",
        "#model.add(layers.Dense(256,activation='relu'))    Include these 2 layers for Not-so-simple CNN-2 which gave improved accuracy\n",
        "#model.add(layers.Dropout(0.5))\n",
        "model.add(layers.Dense(10))\n",
        "\n",
        "model.summary()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Model: \"sequential_2\"\n",
            "_________________________________________________________________\n",
            "Layer (type)                 Output Shape              Param #   \n",
            "=================================================================\n",
            "conv2d_4 (Conv2D)            (None, 32, 32, 32)        896       \n",
            "_________________________________________________________________\n",
            "batch_normalization (BatchNo (None, 32, 32, 32)        128       \n",
            "_________________________________________________________________\n",
            "conv2d_5 (Conv2D)            (None, 32, 32, 64)        18496     \n",
            "_________________________________________________________________\n",
            "batch_normalization_1 (Batch (None, 32, 32, 64)        256       \n",
            "_________________________________________________________________\n",
            "max_pooling2d_2 (MaxPooling2 (None, 8, 8, 64)          0         \n",
            "_________________________________________________________________\n",
            "dropout_2 (Dropout)          (None, 8, 8, 64)          0         \n",
            "_________________________________________________________________\n",
            "flatten_2 (Flatten)          (None, 4096)              0         \n",
            "_________________________________________________________________\n",
            "dense_2 (Dense)              (None, 256)               1048832   \n",
            "_________________________________________________________________\n",
            "dropout_3 (Dropout)          (None, 256)               0         \n",
            "_________________________________________________________________\n",
            "dense_3 (Dense)              (None, 10)                2570      \n",
            "=================================================================\n",
            "Total params: 1,071,178\n",
            "Trainable params: 1,070,986\n",
            "Non-trainable params: 192\n",
            "_________________________________________________________________\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "UchKvATp50KT",
        "outputId": "5cee7703-e4d5-4350-e001-b2c3a07507cd"
      },
      "source": [
        "# A flowchart of the model\n",
        "tf.keras.utils.plot_model(model, 'NOT SIMPLE CNN.jpeg')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "image/jpeg": "\n",
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "tFsTrveclWXT"
      },
      "source": [
        "# Callbacks for early stopping and saving\n",
        "\n",
        "earlystop = callbacks.EarlyStopping(\n",
        "    monitor = 'val_accuracy',\n",
        "    patience = 10,\n",
        "    verbose = 1,\n",
        ")\n",
        "\n",
        "checkpoint = callbacks.ModelCheckpoint(\n",
        "    filepath = '/content/drive/MyDrive/',\n",
        "    monitor = 'val_accuracy',\n",
        "    verbose = 1,\n",
        "    save_best_model = True\n",
        ")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dXl0o7RalfBa",
        "outputId": "6c4d05d8-1dd9-4c79-f364-476cb6d5c3c4"
      },
      "source": [
        "# Compiling the model\n",
        "\n",
        "opt = 'adam'\n",
        "\n",
        "model.compile(optimizer= opt,\n",
        "              loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True), \n",
        "              metrics=['accuracy'])\n",
        "                  \n",
        "history = model.fit(X_train , y_train,\n",
        "                    validation_split=(0.2),\n",
        "                    epochs=100, \n",
        "                    callbacks = [earlystop, checkpoint])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 1.9094 - accuracy: 0.3208\n",
            "Epoch 00001: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.9094 - accuracy: 0.3208 - val_loss: 1.6627 - val_accuracy: 0.4017\n",
            "Epoch 2/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 1.5826 - accuracy: 0.4212\n",
            "Epoch 00002: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.5824 - accuracy: 0.4213 - val_loss: 1.2705 - val_accuracy: 0.5596\n",
            "Epoch 3/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 1.4207 - accuracy: 0.4895\n",
            "Epoch 00003: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.4207 - accuracy: 0.4895 - val_loss: 1.1884 - val_accuracy: 0.6059\n",
            "Epoch 4/100\n",
            "1249/1250 [============================>.] - ETA: 0s - loss: 1.3316 - accuracy: 0.5270\n",
            "Epoch 00004: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.3316 - accuracy: 0.5270 - val_loss: 1.1495 - val_accuracy: 0.5878\n",
            "Epoch 5/100\n",
            "1246/1250 [============================>.] - ETA: 0s - loss: 1.2591 - accuracy: 0.5574\n",
            "Epoch 00005: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.2588 - accuracy: 0.5576 - val_loss: 1.1552 - val_accuracy: 0.5878\n",
            "Epoch 6/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 1.2001 - accuracy: 0.5813\n",
            "Epoch 00006: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.1996 - accuracy: 0.5816 - val_loss: 1.0305 - val_accuracy: 0.6468\n",
            "Epoch 7/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 1.1492 - accuracy: 0.6006\n",
            "Epoch 00007: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.1496 - accuracy: 0.6003 - val_loss: 1.0593 - val_accuracy: 0.6330\n",
            "Epoch 8/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 1.1105 - accuracy: 0.6153\n",
            "Epoch 00008: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.1104 - accuracy: 0.6153 - val_loss: 0.9444 - val_accuracy: 0.6793\n",
            "Epoch 9/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 1.0671 - accuracy: 0.6306\n",
            "Epoch 00009: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.0677 - accuracy: 0.6304 - val_loss: 0.9424 - val_accuracy: 0.6813\n",
            "Epoch 10/100\n",
            "1240/1250 [============================>.] - ETA: 0s - loss: 1.0275 - accuracy: 0.6410\n",
            "Epoch 00010: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 1.0272 - accuracy: 0.6411 - val_loss: 0.8810 - val_accuracy: 0.7028\n",
            "Epoch 11/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.9872 - accuracy: 0.6587\n",
            "Epoch 00011: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.9872 - accuracy: 0.6585 - val_loss: 0.9088 - val_accuracy: 0.6877\n",
            "Epoch 12/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.9592 - accuracy: 0.6678\n",
            "Epoch 00012: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.9594 - accuracy: 0.6678 - val_loss: 0.9662 - val_accuracy: 0.6647\n",
            "Epoch 13/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.9196 - accuracy: 0.6792\n",
            "Epoch 00013: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.9193 - accuracy: 0.6793 - val_loss: 0.8707 - val_accuracy: 0.7022\n",
            "Epoch 14/100\n",
            "1245/1250 [============================>.] - ETA: 0s - loss: 0.8916 - accuracy: 0.6902\n",
            "Epoch 00014: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.8920 - accuracy: 0.6901 - val_loss: 0.7804 - val_accuracy: 0.7341\n",
            "Epoch 15/100\n",
            "1246/1250 [============================>.] - ETA: 0s - loss: 0.8616 - accuracy: 0.7016\n",
            "Epoch 00015: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.8617 - accuracy: 0.7015 - val_loss: 0.8249 - val_accuracy: 0.7158\n",
            "Epoch 16/100\n",
            "1249/1250 [============================>.] - ETA: 0s - loss: 0.8308 - accuracy: 0.7123\n",
            "Epoch 00016: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.8309 - accuracy: 0.7123 - val_loss: 0.8221 - val_accuracy: 0.7215\n",
            "Epoch 17/100\n",
            "1244/1250 [============================>.] - ETA: 0s - loss: 0.8158 - accuracy: 0.7170\n",
            "Epoch 00017: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.8158 - accuracy: 0.7169 - val_loss: 0.7740 - val_accuracy: 0.7333\n",
            "Epoch 18/100\n",
            "1238/1250 [============================>.] - ETA: 0s - loss: 0.7891 - accuracy: 0.7240\n",
            "Epoch 00018: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.7893 - accuracy: 0.7240 - val_loss: 0.7676 - val_accuracy: 0.7443\n",
            "Epoch 19/100\n",
            "1242/1250 [============================>.] - ETA: 0s - loss: 0.7666 - accuracy: 0.7311\n",
            "Epoch 00019: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.7669 - accuracy: 0.7309 - val_loss: 0.7789 - val_accuracy: 0.7366\n",
            "Epoch 20/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.7507 - accuracy: 0.7386\n",
            "Epoch 00020: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.7507 - accuracy: 0.7385 - val_loss: 0.7620 - val_accuracy: 0.7415\n",
            "Epoch 21/100\n",
            "1238/1250 [============================>.] - ETA: 0s - loss: 0.7274 - accuracy: 0.7484\n",
            "Epoch 00021: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.7269 - accuracy: 0.7486 - val_loss: 0.7705 - val_accuracy: 0.7389\n",
            "Epoch 22/100\n",
            "1242/1250 [============================>.] - ETA: 0s - loss: 0.7051 - accuracy: 0.7552\n",
            "Epoch 00022: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.7052 - accuracy: 0.7552 - val_loss: 0.7374 - val_accuracy: 0.7464\n",
            "Epoch 23/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 0.6969 - accuracy: 0.7581\n",
            "Epoch 00023: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6969 - accuracy: 0.7582 - val_loss: 0.7239 - val_accuracy: 0.7566\n",
            "Epoch 24/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.6799 - accuracy: 0.7628\n",
            "Epoch 00024: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6799 - accuracy: 0.7628 - val_loss: 0.7095 - val_accuracy: 0.7629\n",
            "Epoch 25/100\n",
            "1246/1250 [============================>.] - ETA: 0s - loss: 0.6605 - accuracy: 0.7704\n",
            "Epoch 00025: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6604 - accuracy: 0.7704 - val_loss: 0.7701 - val_accuracy: 0.7415\n",
            "Epoch 26/100\n",
            "1246/1250 [============================>.] - ETA: 0s - loss: 0.6498 - accuracy: 0.7731\n",
            "Epoch 00026: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6499 - accuracy: 0.7730 - val_loss: 0.7193 - val_accuracy: 0.7511\n",
            "Epoch 27/100\n",
            "1241/1250 [============================>.] - ETA: 0s - loss: 0.6413 - accuracy: 0.7770\n",
            "Epoch 00027: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6414 - accuracy: 0.7769 - val_loss: 0.7641 - val_accuracy: 0.7489\n",
            "Epoch 28/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.6192 - accuracy: 0.7850\n",
            "Epoch 00028: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6191 - accuracy: 0.7850 - val_loss: 0.6955 - val_accuracy: 0.7672\n",
            "Epoch 29/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.6123 - accuracy: 0.7869\n",
            "Epoch 00029: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.6123 - accuracy: 0.7869 - val_loss: 0.6986 - val_accuracy: 0.7710\n",
            "Epoch 30/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 0.5984 - accuracy: 0.7902\n",
            "Epoch 00030: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5984 - accuracy: 0.7902 - val_loss: 0.7694 - val_accuracy: 0.7389\n",
            "Epoch 31/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 0.5951 - accuracy: 0.7912\n",
            "Epoch 00031: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5947 - accuracy: 0.7914 - val_loss: 0.7342 - val_accuracy: 0.7558\n",
            "Epoch 32/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 0.5817 - accuracy: 0.7982\n",
            "Epoch 00032: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5817 - accuracy: 0.7982 - val_loss: 0.6938 - val_accuracy: 0.7686\n",
            "Epoch 33/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 0.5793 - accuracy: 0.7995\n",
            "Epoch 00033: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5786 - accuracy: 0.7996 - val_loss: 0.6848 - val_accuracy: 0.7661\n",
            "Epoch 34/100\n",
            "1246/1250 [============================>.] - ETA: 0s - loss: 0.5664 - accuracy: 0.8038\n",
            "Epoch 00034: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5672 - accuracy: 0.8036 - val_loss: 0.6936 - val_accuracy: 0.7732\n",
            "Epoch 35/100\n",
            "1248/1250 [============================>.] - ETA: 0s - loss: 0.5524 - accuracy: 0.8066\n",
            "Epoch 00035: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5525 - accuracy: 0.8065 - val_loss: 0.7294 - val_accuracy: 0.7551\n",
            "Epoch 36/100\n",
            "1238/1250 [============================>.] - ETA: 0s - loss: 0.5499 - accuracy: 0.8091\n",
            "Epoch 00036: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5499 - accuracy: 0.8091 - val_loss: 0.7757 - val_accuracy: 0.7429\n",
            "Epoch 37/100\n",
            "1242/1250 [============================>.] - ETA: 0s - loss: 0.5470 - accuracy: 0.8093\n",
            "Epoch 00037: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5470 - accuracy: 0.8093 - val_loss: 0.6745 - val_accuracy: 0.7737\n",
            "Epoch 38/100\n",
            "1240/1250 [============================>.] - ETA: 0s - loss: 0.5438 - accuracy: 0.8116\n",
            "Epoch 00038: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5442 - accuracy: 0.8115 - val_loss: 0.7078 - val_accuracy: 0.7617\n",
            "Epoch 39/100\n",
            "1239/1250 [============================>.] - ETA: 0s - loss: 0.5318 - accuracy: 0.8150\n",
            "Epoch 00039: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5325 - accuracy: 0.8146 - val_loss: 0.6725 - val_accuracy: 0.7769\n",
            "Epoch 40/100\n",
            "1249/1250 [============================>.] - ETA: 0s - loss: 0.5234 - accuracy: 0.8180\n",
            "Epoch 00040: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5233 - accuracy: 0.8180 - val_loss: 0.7087 - val_accuracy: 0.7700\n",
            "Epoch 41/100\n",
            "1245/1250 [============================>.] - ETA: 0s - loss: 0.5132 - accuracy: 0.8208\n",
            "Epoch 00041: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5133 - accuracy: 0.8208 - val_loss: 0.7012 - val_accuracy: 0.7712\n",
            "Epoch 42/100\n",
            "1244/1250 [============================>.] - ETA: 0s - loss: 0.5058 - accuracy: 0.8240\n",
            "Epoch 00042: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.5058 - accuracy: 0.8240 - val_loss: 0.7215 - val_accuracy: 0.7567\n",
            "Epoch 43/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.5097 - accuracy: 0.8242\n",
            "Epoch 00043: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5095 - accuracy: 0.8243 - val_loss: 0.7324 - val_accuracy: 0.7607\n",
            "Epoch 44/100\n",
            "1242/1250 [============================>.] - ETA: 0s - loss: 0.5030 - accuracy: 0.8248\n",
            "Epoch 00044: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5022 - accuracy: 0.8252 - val_loss: 0.6780 - val_accuracy: 0.7785\n",
            "Epoch 45/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 0.5017 - accuracy: 0.8254\n",
            "Epoch 00045: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 4ms/step - loss: 0.5017 - accuracy: 0.8254 - val_loss: 0.6889 - val_accuracy: 0.7728\n",
            "Epoch 46/100\n",
            "1238/1250 [============================>.] - ETA: 0s - loss: 0.4879 - accuracy: 0.8303\n",
            "Epoch 00046: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4877 - accuracy: 0.8306 - val_loss: 0.7210 - val_accuracy: 0.7747\n",
            "Epoch 47/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.4819 - accuracy: 0.8338\n",
            "Epoch 00047: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4819 - accuracy: 0.8338 - val_loss: 0.7013 - val_accuracy: 0.7759\n",
            "Epoch 48/100\n",
            "1245/1250 [============================>.] - ETA: 0s - loss: 0.4870 - accuracy: 0.8296\n",
            "Epoch 00048: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4870 - accuracy: 0.8296 - val_loss: 0.6879 - val_accuracy: 0.7741\n",
            "Epoch 49/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4738 - accuracy: 0.8359\n",
            "Epoch 00049: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4737 - accuracy: 0.8359 - val_loss: 0.7000 - val_accuracy: 0.7801\n",
            "Epoch 50/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 0.4692 - accuracy: 0.8372\n",
            "Epoch 00050: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4692 - accuracy: 0.8372 - val_loss: 0.6842 - val_accuracy: 0.7708\n",
            "Epoch 51/100\n",
            "1241/1250 [============================>.] - ETA: 0s - loss: 0.4648 - accuracy: 0.8371\n",
            "Epoch 00051: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4643 - accuracy: 0.8373 - val_loss: 0.6884 - val_accuracy: 0.7781\n",
            "Epoch 52/100\n",
            "1245/1250 [============================>.] - ETA: 0s - loss: 0.4549 - accuracy: 0.8421\n",
            "Epoch 00052: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4552 - accuracy: 0.8421 - val_loss: 0.7102 - val_accuracy: 0.7723\n",
            "Epoch 53/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4638 - accuracy: 0.8403\n",
            "Epoch 00053: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4639 - accuracy: 0.8402 - val_loss: 0.7020 - val_accuracy: 0.7750\n",
            "Epoch 54/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4543 - accuracy: 0.8448\n",
            "Epoch 00054: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4545 - accuracy: 0.8446 - val_loss: 0.6842 - val_accuracy: 0.7776\n",
            "Epoch 55/100\n",
            "1240/1250 [============================>.] - ETA: 0s - loss: 0.4479 - accuracy: 0.8459\n",
            "Epoch 00055: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4473 - accuracy: 0.8462 - val_loss: 0.6759 - val_accuracy: 0.7853\n",
            "Epoch 56/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4491 - accuracy: 0.8428\n",
            "Epoch 00056: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4490 - accuracy: 0.8428 - val_loss: 0.7072 - val_accuracy: 0.7705\n",
            "Epoch 57/100\n",
            "1248/1250 [============================>.] - ETA: 0s - loss: 0.4404 - accuracy: 0.8482\n",
            "Epoch 00057: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4402 - accuracy: 0.8483 - val_loss: 0.7190 - val_accuracy: 0.7764\n",
            "Epoch 58/100\n",
            "1241/1250 [============================>.] - ETA: 0s - loss: 0.4413 - accuracy: 0.8462\n",
            "Epoch 00058: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4408 - accuracy: 0.8464 - val_loss: 0.6943 - val_accuracy: 0.7778\n",
            "Epoch 59/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4423 - accuracy: 0.8474\n",
            "Epoch 00059: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4421 - accuracy: 0.8475 - val_loss: 0.6721 - val_accuracy: 0.7888\n",
            "Epoch 60/100\n",
            "1245/1250 [============================>.] - ETA: 0s - loss: 0.4323 - accuracy: 0.8509\n",
            "Epoch 00060: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4325 - accuracy: 0.8509 - val_loss: 0.7539 - val_accuracy: 0.7769\n",
            "Epoch 61/100\n",
            "1250/1250 [==============================] - ETA: 0s - loss: 0.4331 - accuracy: 0.8509\n",
            "Epoch 00061: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4331 - accuracy: 0.8509 - val_loss: 0.6701 - val_accuracy: 0.7814\n",
            "Epoch 62/100\n",
            "1241/1250 [============================>.] - ETA: 0s - loss: 0.4252 - accuracy: 0.8506\n",
            "Epoch 00062: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4255 - accuracy: 0.8506 - val_loss: 0.6886 - val_accuracy: 0.7739\n",
            "Epoch 63/100\n",
            "1244/1250 [============================>.] - ETA: 0s - loss: 0.4236 - accuracy: 0.8521\n",
            "Epoch 00063: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4232 - accuracy: 0.8522 - val_loss: 0.6822 - val_accuracy: 0.7853\n",
            "Epoch 64/100\n",
            "1243/1250 [============================>.] - ETA: 0s - loss: 0.4244 - accuracy: 0.8514\n",
            "Epoch 00064: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4243 - accuracy: 0.8514 - val_loss: 0.6663 - val_accuracy: 0.7812\n",
            "Epoch 65/100\n",
            "1244/1250 [============================>.] - ETA: 0s - loss: 0.4112 - accuracy: 0.8579\n",
            "Epoch 00065: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4114 - accuracy: 0.8579 - val_loss: 0.6788 - val_accuracy: 0.7839\n",
            "Epoch 66/100\n",
            "1244/1250 [============================>.] - ETA: 0s - loss: 0.4191 - accuracy: 0.8546\n",
            "Epoch 00066: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4195 - accuracy: 0.8543 - val_loss: 0.6829 - val_accuracy: 0.7841\n",
            "Epoch 67/100\n",
            "1242/1250 [============================>.] - ETA: 0s - loss: 0.4237 - accuracy: 0.8527\n",
            "Epoch 00067: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4236 - accuracy: 0.8528 - val_loss: 0.7101 - val_accuracy: 0.7661\n",
            "Epoch 68/100\n",
            "1249/1250 [============================>.] - ETA: 0s - loss: 0.4164 - accuracy: 0.8561\n",
            "Epoch 00068: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4164 - accuracy: 0.8561 - val_loss: 0.6875 - val_accuracy: 0.7825\n",
            "Epoch 69/100\n",
            "1247/1250 [============================>.] - ETA: 0s - loss: 0.4087 - accuracy: 0.8597\n",
            "Epoch 00069: saving model to /content/drive/MyDrive/Colab Notebooks/not simple cnn/not_simple_cnn.h5\n",
            "1250/1250 [==============================] - 6s 5ms/step - loss: 0.4089 - accuracy: 0.8596 - val_loss: 0.7013 - val_accuracy: 0.7785\n",
            "Epoch 00069: early stopping\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "blf28Q4VlkuZ",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "outputId": "428b0cab-6eb0-4045-961b-38e20962db78"
      },
      "source": [
        "# Plotting training and validation accuracy over epochs\n",
        "\n",
        "plt.plot(history.history['accuracy'], label='accuracy')\n",
        "plt.plot(history.history['val_accuracy'], label = 'val_accuracy')\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Accuracy')\n",
        "plt.legend(loc='lower right')\n",
        "plt.savefig('not_simple_cnn_accuracy.png')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AlQiL4D2oiF7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "outputId": "8e26d439-9488-461a-8dd0-47f592defbbc"
      },
      "source": [
        "# Plotting training and validation loss over epochs\n",
        "\n",
        "plt.plot(history.history['loss'], label='loss')\n",
        "plt.plot(history.history['val_loss'], label='val_loss')\n",
        "plt.xlabel('Epoch')\n",
        "plt.ylabel('Loss')\n",
        "plt.legend(loc='lower right')\n",
        "plt.savefig('not_simple_cnn_loss.png')"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6tfnYuXeok0c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "fcf9a1ab-eb22-4494-b9f1-ed9bf7eaf9d1"
      },
      "source": [
        "# Testing accuracy\n",
        "\n",
        "test_loss, test_acc = model.evaluate(X_test,  y_test, verbose=2)\n",
        "print(test_acc)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "313/313 - 1s - loss: 0.7071 - accuracy: 0.7690\n",
            "0.7689999938011169\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}